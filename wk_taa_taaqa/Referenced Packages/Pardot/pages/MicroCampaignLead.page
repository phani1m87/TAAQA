<apex:page standardController="Lead" recordSetVar="leads" extensions="pi.MicroCampaignSetCtrl,pi.AccessPardotController" sidebar="false" action="{!init}">

<apex:slds ></apex:slds>
<apex:stylesheet value="{!URLFOR($Resource.pi__MicroCampaign, 'css/main.css')}"></apex:stylesheet>
<div class="slds-scope slds-text-body--regular">
  <div id="modal_container"></div>
  <div id="toast_message_container" class="toast-message-container"></div>
  <div id="engage_email_container"></div>
</div>
<apex:includeLightning ></apex:includeLightning>
<apex:includeScript value="{!URLFOR($Resource.pi__MarketingActions, 'js/jquery-2.1.1.min.js')}"></apex:includeScript>
<apex:includeScript value="{!URLFOR($Resource.pi__jquery_ui_1_11_1_custom_has_dialog, 'jquery-ui.min.js')}"></apex:includeScript>
<apex:includeScript value="{!URLFOR($Resource.pi__ckeditorSalesReach, 'ckeditor/ckeditor.js')}"></apex:includeScript>
<script type="text/javascript">
  window.SLDS_assetsPath = '{!URLFOR($Asset.SLDS, "assets")}';
  window.NamespacePrefix = '{!namespace}';
  window.SyncedProspectType = '{!standardControllerType}';
  window.userFullName = '{!JSENCODE($User.FirstName)} {!JSENCODE($User.LastName)}';
  window.userEmail = '{!JSENCODE($User.Email)}';
  window.recipients = [];
  window.emailTemplates = [];
  window.returnUrl = '{!JSENCODE(returnUrl)}';
  window.invalidObjectType = '{!invalidObjectTypeError}';
  window.userHasInsufficientAccess = '{!userHasInsufficientAccess}';
  window.TemplateLockingEnabled = {!hasTemplateLockingEnabled};
  window.soboEnabled = {!soboEnabled};
  window.UiUpdatesPdfUrl = '{!URLFOR($Resource.MicroCampaign, 'pdf/Engage_Editor_Updates.pdf')}';
  window.unsubscribeFooterThreshold = '{!unsubscribeFooterThreshold}';
  window.sendOnBehalfOf = {
  	leadOwner: false,
  	contactOwner: false,
  	accountOwner: false
  }
  
  <apex:repeat value="{!emailTemplates}" var="template">
  	emailTemplates.push({
  		id: '{!template.id}',
  		name: "{!JSENCODE(HTMLENCODE(template.name))}"
  	});
  </apex:repeat>
  
  <apex:repeat value="{!recipients}" var="recipient">
  	recipients.push({
  		id: '{!recipient.id}',
  		name: "{!JSENCODE(recipient.name)}",
  		email: "{!recipient.email}",
  		canReceiveEmails: {!recipient.canReceiveEmails},
  		isDuplicateEmail: {!recipient.isDuplicateEmail},
  		accountHasEmailBlocked: {!recipient.accountHasEmailBlocked},
  		isPersonAccount: {!recipient.isPersonAccount}
  	});
  </apex:repeat>
  
</script>
<apex:includeScript value="{!URLFOR($Resource.pi__MicroCampaign, 'js/micro_campaign_main.js')}"></apex:includeScript>
<script type="text/javascript">
	window.PardotBaseUrl = '{!pardotBaseUrl}/' + 'api/';
	window.SendEmailActionLocation = '{!$RemoteAction.MicroCampaignSetCtrl.sendMicrocampaignV2}';
	window.GetRemainingPardotEmailSendsActionLocation = '{!$RemoteAction.MicroCampaignSetCtrl.getRemainingPardotEmailSends}';
	window.TemplateHtmlActionLocation = '{!$RemoteAction.MicroCampaignSetCtrl.getEmailTemplate}';
	window.GetPardotVariableTags = '{!$RemoteAction.MicroCampaignSetCtrl.getPardotVariableTags}';
	window.PopulatePardotMergeTags = '{!$RemoteAction.MicroCampaignSetCtrl.populatePardotMergeTags}';
	window.determineIfRecipientsCanSoboActionLocation = '{!$RemoteAction.MicroCampaignSetCtrl.determineIfRecipientsCanSobo}';
	window.getUsersActionLocation = '{!$RemoteAction.MicroCampaignSetCtrl.getUsers}';
	window.sendOnBehalfOfAbilities = {
		contactOwner: false,
		accountOwner: false,
		leadOwner: {!userCanSoboByEdit}
	}
</script>
</apex:page>